<?xml version="1.0" encoding="UTF-8"?>
<!-- - DispatcherServlet application context for PetClinic's web tier. -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

	<import resource="mvc-view-config.xml" />

	<!-- - POJOs labeled with the @Controller and @Service annotations are auto-detected. -->
	<context:component-scan base-package="com.personal.clm.web" />

	<mvc:annotation-driven conversion-service="conversionService" validator="validator"/>
	
	<!-- 
	<mvc:interceptors>
		<bean></bean>
	</mvc:interceptors> 
	-->

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/*" /> 
			<bean class="com.personal.clm.web.interceptor.ExceptionLoggerInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors> 

	<!-- <mvc:default-servlet-handler/> -->
	<!-- all resources inside folder src/main/webapp/resources are mapped so 
		they can be refered to inside JSP files (see header.jsp for more details) -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- uses WebJars so Javascript and CSS libs can be declared as Maven dependencies 
		(Bootstrap, jQuery...) -->
	<mvc:resources mapping="/webjars/**"
		location="classpath:/META-INF/resources/webjars/" />

	<mvc:view-controller path="/" view-name="welcome" />

	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<!-- 
		<property name="formatters">
			<list>
				<bean class="com.nfswuxi.frontend.web.support.formatter.TaskTypeFormatterAnnotationFormatterFactory" />
			</list> 
			<set>
				<bean class="com.nfswuxi.frontend.web.support.formatter.TaskTypeFormatter" />
			</set> 
		</property>
		-->
		<!-- 
		<property name="converters">
			<list>
				<bean class="com.nfswuxi.frontend.web.support.converter.StringToDateConverter">
					<constructor-arg value="yyyy-MM-dd"></constructor-arg>
				</bean> 
			</list> 
		</property>
		-->
	</bean>

	<!-- 以下 validator ConversionService 在使用 mvc:annotation-driven 会 自动注册？ -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 如果不加，默认使用classpath下的 ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>

	<!-- - Message source for this context, loaded from localized "messages_xx" 
		files. - Files are stored inside src/main/resources -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource"
		p:basename="messages/messages" />


	<!-- - This bean resolves specific types of exceptions to corresponding 
		logical - view names for error views. -->
	<!-- 系统错误转发配置[并记录错误日志] -->
	<!-- 只有当控制器处理方法未捕获该异常时，才会走这里；相反，若走这里的异常处理，就不会再走日志拦截器； -->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<!-- view name resolved using bean of type InternalResourceViewResolver 
			(declared in mvc-view-config.xml) -->
			
		<property name="defaultErrorView" value="error/error" /><!-- 默认为500，系统错误(error.jsp) -->
		<!-- results into 'WEB-INF/jsp/error.jsp' -->
		
		<property name="defaultStatusCode" value="500"></property>
		<property name="statusCodes"><!-- 配置多个statusCode -->
			<props>
				<prop key="error/error">500</prop>  <!-- error.jsp -->
				<prop key="error/404">404</prop>    <!-- 404.jsp -->
			</props>
		</property>
		
		<property name="warnLogCategory" value="warn" />
		<!-- needed otherwise exceptions won't be logged anywhere -->
		
		<property name="exceptionMappings">
			<props>
				<!-- 这里你可以根据需要定义N多个错误异常转发 -->
				<prop key="java.lang.ArithmeticException">error/arithmeticError</prop><!-- 算术错误(arithmeticError.jsp) -->
				<prop key="java.sql.SQLException">error/dbError</prop> <!-- 数据库错误(dbError.jsp) -->
				<prop key="org.springframework.web.bind.ServletRequestBindingException">error/bizError</prop> <!-- 参数绑定错误(如：必须参数没传递)(bizError.jsp) -->
				<prop key="java.lang.IllegalArgumentException">error/bizError</prop>  <!-- 参数错误(bizError.jsp) -->
				<prop key="org.springframework.validation.BindException">error/bizError</prop>  <!-- 参数类型有误(bizError.jsp) -->
				<prop key="java.lang.Exception">error/unknowError</prop>  <!-- 其他错误为'未定义错误'(unknowError.jsp) -->
			</props>
		</property>
	</bean>

</beans>
